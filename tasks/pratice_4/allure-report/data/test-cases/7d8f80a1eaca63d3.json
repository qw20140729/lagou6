{
  "uid" : "7d8f80a1eaca63d3",
  "name" : "test_sub[1-2-4]",
  "fullName" : "test_calc.TestCalc#test_sub",
  "historyId" : "0319d691a441c346e058b686bb6bc5e9",
  "time" : {
    "start" : 1613621180197,
    "stop" : 1613621180198,
    "duration" : 1
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert -1 == 4\n +  where -1 = <bound method Calculator.sub of <tasks.pratice_4.pythonCode.calc.Calculator object at 0x00000000036C31F0>>(1, 2)\n +    where <bound method Calculator.sub of <tasks.pratice_4.pythonCode.calc.Calculator object at 0x00000000036C31F0>> = <tasks.pratice_4.pythonCode.calc.Calculator object at 0x00000000036C31F0>.sub\n +      where <tasks.pratice_4.pythonCode.calc.Calculator object at 0x00000000036C31F0> = <pratice_4.test_calc.TestCalc object at 0x00000000036C31C0>.mycalc",
  "statusTrace" : "self = <pratice_4.test_calc.TestCalc object at 0x00000000036C31C0>, a = 1, b = 2, result = 4, my_fixture = None\n\n    @pytest.mark.parametrize('a,b,result', [(1, 2, 4)])\n    def test_sub(self, a, b, result, my_fixture):\n>       assert self.mycalc.sub(a, b) == result\nE       assert -1 == 4\nE        +  where -1 = <bound method Calculator.sub of <tasks.pratice_4.pythonCode.calc.Calculator object at 0x00000000036C31F0>>(1, 2)\nE        +    where <bound method Calculator.sub of <tasks.pratice_4.pythonCode.calc.Calculator object at 0x00000000036C31F0>> = <tasks.pratice_4.pythonCode.calc.Calculator object at 0x00000000036C31F0>.sub\nE        +      where <tasks.pratice_4.pythonCode.calc.Calculator object at 0x00000000036C31F0> = <pratice_4.test_calc.TestCalc object at 0x00000000036C31C0>.mycalc\n\ntest_calc.py:28: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "my_fixture",
    "time" : {
      "start" : 1613621180195,
      "stop" : 1613621180196,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert -1 == 4\n +  where -1 = <bound method Calculator.sub of <tasks.pratice_4.pythonCode.calc.Calculator object at 0x00000000036C31F0>>(1, 2)\n +    where <bound method Calculator.sub of <tasks.pratice_4.pythonCode.calc.Calculator object at 0x00000000036C31F0>> = <tasks.pratice_4.pythonCode.calc.Calculator object at 0x00000000036C31F0>.sub\n +      where <tasks.pratice_4.pythonCode.calc.Calculator object at 0x00000000036C31F0> = <pratice_4.test_calc.TestCalc object at 0x00000000036C31C0>.mycalc",
    "statusTrace" : "self = <pratice_4.test_calc.TestCalc object at 0x00000000036C31C0>, a = 1, b = 2, result = 4, my_fixture = None\n\n    @pytest.mark.parametrize('a,b,result', [(1, 2, 4)])\n    def test_sub(self, a, b, result, my_fixture):\n>       assert self.mycalc.sub(a, b) == result\nE       assert -1 == 4\nE        +  where -1 = <bound method Calculator.sub of <tasks.pratice_4.pythonCode.calc.Calculator object at 0x00000000036C31F0>>(1, 2)\nE        +    where <bound method Calculator.sub of <tasks.pratice_4.pythonCode.calc.Calculator object at 0x00000000036C31F0>> = <tasks.pratice_4.pythonCode.calc.Calculator object at 0x00000000036C31F0>.sub\nE        +      where <tasks.pratice_4.pythonCode.calc.Calculator object at 0x00000000036C31F0> = <pratice_4.test_calc.TestCalc object at 0x00000000036C31C0>.mycalc\n\ntest_calc.py:28: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "83a6f1d017162ba8",
      "name" : "stdout",
      "source" : "83a6f1d017162ba8.txt",
      "type" : "text/plain",
      "size" : 16
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "stepsCount" : 0,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "my_fixture::0",
    "time" : {
      "start" : 1613621180226,
      "stop" : 1613621180226,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "suite",
    "value" : "test_calc"
  }, {
    "name" : "subSuite",
    "value" : "TestCalc"
  }, {
    "name" : "host",
    "value" : "qyanls"
  }, {
    "name" : "thread",
    "value" : "2388-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_calc"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "a",
    "value" : "1"
  }, {
    "name" : "b",
    "value" : "2"
  }, {
    "name" : "result",
    "value" : "4"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "7d8f80a1eaca63d3.json",
  "parameterValues" : [ "1", "2", "4" ]
}